#implement stack using array

#include <stdio.h>
#define MAX 5 

int stack[MAX];
int top = -1; 

int isFull() {
    return top == MAX - 1;
}


int isEmpty() {
    return top == -1;
}


void push(int value) {
    if (isFull()) {
        printf("Stack Overflow! Cannot push %d\n", value);
    } else {
        stack[++top] = value;
        printf("%d pushed onto the stack.\n", value);
    }
}


int pop() {
    if (isEmpty()) {
        printf("Stack Underflow! Cannot pop.\n");
        return -1; 
    } else {
        int poppedValue = stack[top--];
        printf("%d popped from the stack.\n", poppedValue);
        return poppedValue;
    }
}


void display() {
    if (isEmpty()) {
        printf("Stack is empty.\n");
    } else {
        printf("Stack elements: ");
        for (int i = 0; i <= top; i++) {
            printf("%d ", stack[i]);
        }
        printf("\n");
    }
}

int main() {
   
    push(10);
    push(20);
    push(30);
    display();
    
    pop();
    display();
    
    push(40);
    push(50);
    push(60);
    push(70);
    display();

    return 0;
}
